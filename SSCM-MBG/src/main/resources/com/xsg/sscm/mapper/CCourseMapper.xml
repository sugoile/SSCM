<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xsg.sscm.mapper.CCourseMapper">
  <resultMap id="BaseResultMap" type="com.xsg.sscm.model.CCourse">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="credit" jdbcType="INTEGER" property="credit" />
    <result column="class_hours" jdbcType="INTEGER" property="classHours" />
    <result column="plan_type" jdbcType="VARCHAR" property="planType" />
    <result column="teaching_class" jdbcType="VARCHAR" property="teachingClass" />
    <result column="tid" jdbcType="BIGINT" property="tid" />
    <result column="limited_election" jdbcType="INTEGER" property="limitedElection" />
    <result column="class_number" jdbcType="INTEGER" property="classNumber" />
    <result column="choose_number" jdbcType="INTEGER" property="chooseNumber" />
    <result column="states" jdbcType="INTEGER" property="states" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, credit, class_hours, plan_type, teaching_class, tid, limited_election, 
    class_number, choose_number, states
  </sql>
  <select id="selectByExample" parameterType="com.xsg.sscm.model.CCourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from c_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from c_course
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from c_course
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xsg.sscm.model.CCourseExample">
    delete from c_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xsg.sscm.model.CCourse">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into c_course (name, credit, class_hours, 
      plan_type, teaching_class, tid, 
      limited_election, class_number, choose_number, 
      states)
    values (#{name,jdbcType=VARCHAR}, #{credit,jdbcType=INTEGER}, #{classHours,jdbcType=INTEGER}, 
      #{planType,jdbcType=VARCHAR}, #{teachingClass,jdbcType=VARCHAR}, #{tid,jdbcType=BIGINT}, 
      #{limitedElection,jdbcType=INTEGER}, #{classNumber,jdbcType=INTEGER}, #{chooseNumber,jdbcType=INTEGER}, 
      #{states,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xsg.sscm.model.CCourse">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into c_course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="credit != null">
        credit,
      </if>
      <if test="classHours != null">
        class_hours,
      </if>
      <if test="planType != null">
        plan_type,
      </if>
      <if test="teachingClass != null">
        teaching_class,
      </if>
      <if test="tid != null">
        tid,
      </if>
      <if test="limitedElection != null">
        limited_election,
      </if>
      <if test="classNumber != null">
        class_number,
      </if>
      <if test="chooseNumber != null">
        choose_number,
      </if>
      <if test="states != null">
        states,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="credit != null">
        #{credit,jdbcType=INTEGER},
      </if>
      <if test="classHours != null">
        #{classHours,jdbcType=INTEGER},
      </if>
      <if test="planType != null">
        #{planType,jdbcType=VARCHAR},
      </if>
      <if test="teachingClass != null">
        #{teachingClass,jdbcType=VARCHAR},
      </if>
      <if test="tid != null">
        #{tid,jdbcType=BIGINT},
      </if>
      <if test="limitedElection != null">
        #{limitedElection,jdbcType=INTEGER},
      </if>
      <if test="classNumber != null">
        #{classNumber,jdbcType=INTEGER},
      </if>
      <if test="chooseNumber != null">
        #{chooseNumber,jdbcType=INTEGER},
      </if>
      <if test="states != null">
        #{states,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xsg.sscm.model.CCourseExample" resultType="java.lang.Long">
    select count(*) from c_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update c_course
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.credit != null">
        credit = #{record.credit,jdbcType=INTEGER},
      </if>
      <if test="record.classHours != null">
        class_hours = #{record.classHours,jdbcType=INTEGER},
      </if>
      <if test="record.planType != null">
        plan_type = #{record.planType,jdbcType=VARCHAR},
      </if>
      <if test="record.teachingClass != null">
        teaching_class = #{record.teachingClass,jdbcType=VARCHAR},
      </if>
      <if test="record.tid != null">
        tid = #{record.tid,jdbcType=BIGINT},
      </if>
      <if test="record.limitedElection != null">
        limited_election = #{record.limitedElection,jdbcType=INTEGER},
      </if>
      <if test="record.classNumber != null">
        class_number = #{record.classNumber,jdbcType=INTEGER},
      </if>
      <if test="record.chooseNumber != null">
        choose_number = #{record.chooseNumber,jdbcType=INTEGER},
      </if>
      <if test="record.states != null">
        states = #{record.states,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update c_course
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      credit = #{record.credit,jdbcType=INTEGER},
      class_hours = #{record.classHours,jdbcType=INTEGER},
      plan_type = #{record.planType,jdbcType=VARCHAR},
      teaching_class = #{record.teachingClass,jdbcType=VARCHAR},
      tid = #{record.tid,jdbcType=BIGINT},
      limited_election = #{record.limitedElection,jdbcType=INTEGER},
      class_number = #{record.classNumber,jdbcType=INTEGER},
      choose_number = #{record.chooseNumber,jdbcType=INTEGER},
      states = #{record.states,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xsg.sscm.model.CCourse">
    update c_course
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="credit != null">
        credit = #{credit,jdbcType=INTEGER},
      </if>
      <if test="classHours != null">
        class_hours = #{classHours,jdbcType=INTEGER},
      </if>
      <if test="planType != null">
        plan_type = #{planType,jdbcType=VARCHAR},
      </if>
      <if test="teachingClass != null">
        teaching_class = #{teachingClass,jdbcType=VARCHAR},
      </if>
      <if test="tid != null">
        tid = #{tid,jdbcType=BIGINT},
      </if>
      <if test="limitedElection != null">
        limited_election = #{limitedElection,jdbcType=INTEGER},
      </if>
      <if test="classNumber != null">
        class_number = #{classNumber,jdbcType=INTEGER},
      </if>
      <if test="chooseNumber != null">
        choose_number = #{chooseNumber,jdbcType=INTEGER},
      </if>
      <if test="states != null">
        states = #{states,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xsg.sscm.model.CCourse">
    update c_course
    set name = #{name,jdbcType=VARCHAR},
      credit = #{credit,jdbcType=INTEGER},
      class_hours = #{classHours,jdbcType=INTEGER},
      plan_type = #{planType,jdbcType=VARCHAR},
      teaching_class = #{teachingClass,jdbcType=VARCHAR},
      tid = #{tid,jdbcType=BIGINT},
      limited_election = #{limitedElection,jdbcType=INTEGER},
      class_number = #{classNumber,jdbcType=INTEGER},
      choose_number = #{chooseNumber,jdbcType=INTEGER},
      states = #{states,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
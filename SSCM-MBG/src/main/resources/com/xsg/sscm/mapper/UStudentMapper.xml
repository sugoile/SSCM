<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xsg.sscm.mapper.UStudentMapper">
  <resultMap id="BaseResultMap" type="com.xsg.sscm.model.UStudent">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="sno" jdbcType="BIGINT" property="sno" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="deptid" jdbcType="BIGINT" property="deptid" />
    <result column="classes" jdbcType="VARCHAR" property="classes" />
    <result column="grade" jdbcType="VARCHAR" property="grade" />
    <result column="campus" jdbcType="VARCHAR" property="campus" />
    <result column="student_status" jdbcType="INTEGER" property="studentStatus" />
    <result column="study_status" jdbcType="INTEGER" property="studyStatus" />
    <result column="admission_time" jdbcType="VARCHAR" property="admissionTime" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sno, name, deptid, classes, grade, campus, student_status, study_status, admission_time, 
    password, create_time, login_time, status
  </sql>
  <select id="selectByExample" parameterType="com.xsg.sscm.model.UStudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from u_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from u_student
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from u_student
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xsg.sscm.model.UStudentExample">
    delete from u_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xsg.sscm.model.UStudent">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into u_student (sno, name, deptid, 
      classes, grade, campus, 
      student_status, study_status, admission_time, 
      password, create_time, login_time, 
      status)
    values (#{sno,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{deptid,jdbcType=BIGINT}, 
      #{classes,jdbcType=VARCHAR}, #{grade,jdbcType=VARCHAR}, #{campus,jdbcType=VARCHAR}, 
      #{studentStatus,jdbcType=INTEGER}, #{studyStatus,jdbcType=INTEGER}, #{admissionTime,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{loginTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xsg.sscm.model.UStudent">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into u_student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sno != null">
        sno,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="deptid != null">
        deptid,
      </if>
      <if test="classes != null">
        classes,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="campus != null">
        campus,
      </if>
      <if test="studentStatus != null">
        student_status,
      </if>
      <if test="studyStatus != null">
        study_status,
      </if>
      <if test="admissionTime != null">
        admission_time,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sno != null">
        #{sno,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="deptid != null">
        #{deptid,jdbcType=BIGINT},
      </if>
      <if test="classes != null">
        #{classes,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="campus != null">
        #{campus,jdbcType=VARCHAR},
      </if>
      <if test="studentStatus != null">
        #{studentStatus,jdbcType=INTEGER},
      </if>
      <if test="studyStatus != null">
        #{studyStatus,jdbcType=INTEGER},
      </if>
      <if test="admissionTime != null">
        #{admissionTime,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xsg.sscm.model.UStudentExample" resultType="java.lang.Long">
    select count(*) from u_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update u_student
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.sno != null">
        sno = #{record.sno,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.deptid != null">
        deptid = #{record.deptid,jdbcType=BIGINT},
      </if>
      <if test="record.classes != null">
        classes = #{record.classes,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.campus != null">
        campus = #{record.campus,jdbcType=VARCHAR},
      </if>
      <if test="record.studentStatus != null">
        student_status = #{record.studentStatus,jdbcType=INTEGER},
      </if>
      <if test="record.studyStatus != null">
        study_status = #{record.studyStatus,jdbcType=INTEGER},
      </if>
      <if test="record.admissionTime != null">
        admission_time = #{record.admissionTime,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update u_student
    set id = #{record.id,jdbcType=BIGINT},
      sno = #{record.sno,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      deptid = #{record.deptid,jdbcType=BIGINT},
      classes = #{record.classes,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=VARCHAR},
      campus = #{record.campus,jdbcType=VARCHAR},
      student_status = #{record.studentStatus,jdbcType=INTEGER},
      study_status = #{record.studyStatus,jdbcType=INTEGER},
      admission_time = #{record.admissionTime,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xsg.sscm.model.UStudent">
    update u_student
    <set>
      <if test="sno != null">
        sno = #{sno,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="deptid != null">
        deptid = #{deptid,jdbcType=BIGINT},
      </if>
      <if test="classes != null">
        classes = #{classes,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="campus != null">
        campus = #{campus,jdbcType=VARCHAR},
      </if>
      <if test="studentStatus != null">
        student_status = #{studentStatus,jdbcType=INTEGER},
      </if>
      <if test="studyStatus != null">
        study_status = #{studyStatus,jdbcType=INTEGER},
      </if>
      <if test="admissionTime != null">
        admission_time = #{admissionTime,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xsg.sscm.model.UStudent">
    update u_student
    set sno = #{sno,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      deptid = #{deptid,jdbcType=BIGINT},
      classes = #{classes,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=VARCHAR},
      campus = #{campus,jdbcType=VARCHAR},
      student_status = #{studentStatus,jdbcType=INTEGER},
      study_status = #{studyStatus,jdbcType=INTEGER},
      admission_time = #{admissionTime,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>